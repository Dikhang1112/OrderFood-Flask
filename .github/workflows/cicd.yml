name: CI/CD Flask (Dev - no Docker)

on:
  push:
    branches: [ cicd ]   # chỉ chạy khi push lên nhánh cicd

jobs:
  build_and_smoke_test:
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Create .env from secret
        run: |
          echo "${{ secrets.ENV_FILE }}" > .env
          # Dùng SQLite để không cần MySQL khi chạy CI
          echo "SQLALCHEMY_DATABASE_URI=sqlite:///ci_test.db" >> .env
          # Tắt debug để log gọn, đặt PORT cố định
          echo "FLASK_DEBUG=0" >> .env
          echo "PORT=5000" >> .env

      # Start app & smoke test
      - name: Run Flask app (background) and smoke test
        env:
          # nếu app dùng FLASK_APP/CLI thì giữ, còn không thì ignore
          FLASK_APP: OrderFood/index.py
        run: |
          # chạy app nền bằng python entrypoint
          nohup python OrderFood/index.py > app.log 2>&1 &
          echo $! > app.pid

          # đợi app lên
          for i in {1..30}; do
            if curl -fsS http://127.0.0.1:5000 > /dev/null; then
              echo "Smoke test OK"
              break
            fi
            echo "Waiting app... ($i)"
            sleep 2
          done

          # nếu chưa OK thì fail và in log
          if ! curl -fsS http://127.0.0.1:5000 > /dev/null; then
            echo "Smoke test FAILED"
            echo "===== app.log ====="
            tail -n 200 app.log || true
            exit 1
          fi

      - name: Show last logs
        if: always()
        run: |
          echo "===== tail app.log ====="
          tail -n 100 app.log || true
          # dừng app
          if [ -f app.pid ]; then kill $(cat app.pid) || true; fi
